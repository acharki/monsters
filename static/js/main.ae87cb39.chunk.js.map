{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/title/title.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","user","className","src","id","alt","name","email","CardList","props","users","map","SearchBox","placeholder","handleChange","type","autoFocus","onChange","Title","state","title","this","Component","App","start","Date","getTime","searchField","localStorage","getItem","setState","JSON","parse","fetch","then","result","json","console","log","setItem","stringify","filteredUsers","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAWeA,EARF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACT,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAKG,GAA/B,aAA8CC,IAAI,KAC1D,6BAAKJ,EAAKK,OACV,4BAAIL,EAAKM,YCGFC,G,MANE,SAACC,GAAD,OACb,qBAAKP,UAAU,YAAf,SACMO,EAAMC,MAAMC,KAAI,SAAAV,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKG,WCKnCQ,G,MARG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACd,uBAAOC,KAAK,SAASC,WAAS,EAC1Bd,UAAU,SACVW,YAAaA,EACbI,SAAUH,MCJZI,G,kNACFC,MAAQ,CACJC,MAAO,oB,4CAEX,WACI,OACI,8BACI,6BAAKC,KAAKF,MAAMC,c,GAPZE,cAaLJ,ICmCAK,G,wDA5CX,aAAe,IAAD,8BACV,gBACKC,OAAQ,IAAIC,MAAOC,UACxB,EAAKP,MAAQ,CACTT,MAAO,GACPiB,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChB,GAAIC,aAAaC,QAAQ,SAAU,CAC/BR,KAAKS,SAAS,CAACpB,MAAOqB,KAAKC,MAAMJ,aAAaC,QAAQ,aAC5C,IAAIJ,MAAOC,UACJL,KAAKG,WAEtBS,MAAM,8CACDC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAxB,GACF2B,QAAQC,IAAI5B,GACZkB,aAAaW,QAAQ,QAASR,KAAKS,UAAU9B,IAC7C,EAAKoB,SAAS,CAACpB,MAAOA,KACZ,IAAIe,MAAOC,UACJ,EAAKF,W,oBAMtC,WAAU,IAAD,OACL,EAA6BH,KAAKF,MAA3BT,EAAP,EAAOA,MAAOiB,EAAd,EAAcA,YACRc,EAAgB/B,EAAMgC,QAAO,SAAAzC,GAAI,OAAIA,EAAKK,KAAKqC,cAAcC,SAASjB,EAAYgB,kBACxF,OACI,sBAAKzC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CACIW,YAAY,qBACZC,aAAc,SAAC+B,GAAD,OAAO,EAAKf,SAAS,CAACH,YAAakB,EAAEC,OAAOC,WAE9D,cAAC,EAAD,CAAUrC,MAAO+B,W,GAvCfnB,cCMH0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae87cb39.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nconst Card = ({user}) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${user.id}?set=set2`} alt=\"\"/>\r\n        <h2>{user.name}</h2>\r\n        <p>{user.email}</p>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"../card/card.component\";\r\nimport './card-list.style.css';\r\n\r\nconst CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        { props.users.map(user => <Card key={user.id} user={user} />) }\r\n    </div>\r\n);\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => (\r\n    <input type=\"search\" autoFocus\r\n        className=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport './title.component.css'\r\n\r\nclass Title extends Component {\r\n    state = {\r\n        title: 'Monsters Rolodex'\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.title}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","import React, {Component} from 'react';\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport Title from \"./components/title/title.component\";\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.start = new Date().getTime();\n        this.state = {\n            users: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('users')) {\n            this.setState({users: JSON.parse(localStorage.getItem('users'))});\n            let end = new Date().getTime();\n            let time = end - this.start;\n        } else {\n            fetch('https://jsonplaceholder.typicode.com/users')\n                .then(result => result.json())\n                .then(users => {\n                    console.log(users);\n                    localStorage.setItem('users', JSON.stringify(users));\n                    this.setState({users: users});\n                    let end = new Date().getTime();\n                    let time = end - this.start;\n                })\n        }\n\n    }\n\n    render() {\n        const {users, searchField} = this.state;\n        const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchField.toLowerCase()));\n        return (\n            <div className=\"App\">\n                <Title />\n                <SearchBox\n                    placeholder=\"Search monsters...\"\n                    handleChange={(e) => this.setState({searchField: e.target.value})}\n                />\n                <CardList users={filteredUsers}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}